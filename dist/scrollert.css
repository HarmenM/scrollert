.scrollert {
  position: relative;
  overflow: hidden;
}
.scrollert > .scrollert-content {
  position: absolute;
  overflow: hidden;
  box-sizing: content-box;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.scrollert > .scrollert-content:focus {
  outline: none;
}
.scrollert > .scrollert-content::-webkit-scrollbar {
  display: none;
}
.scrollert:hover > .scrollert-scrollbar {
  opacity: .5;
}
.scrollert > .scrollert-scrollbar {
  position: absolute;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 6px;
  overflow: hidden;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
  opacity: .0;
}
.scrollert > .scrollert-scrollbar:hover {
  opacity: 1;
}
.scrollert > .scrollert-scrollbar > .scrollert-track {
  position: absolute;
  background: rgba(0, 0, 0, 0.4);
  border-radius: 6px;
}
.scrollert > .scrollert-scrollbar-y {
  top: 8px;
  bottom: 8px;
  right: 8px;
  width: 12px;
}
.scrollert > .scrollert-scrollbar-y > .scrollert-track {
  top: 0;
  height: 0;
  width: 100%;
  min-height: 5%;
}
.scrollert > .scrollert-scrollbar-x {
  left: 8px;
  right: 8px;
  bottom: 8px;
  height: 12px;
}
.scrollert > .scrollert-scrollbar-x > .scrollert-track {
  left: 0;
  width: 0;
  height: 100%;
  min-width: 5%;
}
.scrollert.scrollert-axis-x.scrollert-axis-y > .scrollert-scrollbar-y {
  bottom: 28px;
  top: 8px;
}
.scrollert.scrollert-axis-x.scrollert-axis-y > .scrollert-scrollbar-x {
  right: 28px;
  left: 8px;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcm9sbGVydC5sZXNzIiwic2Nyb2xsZXJ0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQU9JLG1CQUFBO0VBQ0EsaUJBQUE7Q0NMSDtBREhEO0VBWVEsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHdCQUFBO0VBQ0EsT0FBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsUUFBQTtDQ05QO0FEUU87RUFFSSxjQUFBO0NDUFg7QURVTztFQUVJLGNBQUE7Q0NUWDtBRGFHO0VBRUksWUFBQTtDQ1pQO0FEckJEO0VBc0NRLG1CQUFBO0VBRUEsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBRUEsa0NBQUE7RUFBQSwwQkFBQTtFQUNBLFlBQUE7Q0NoQlA7QURrQk87RUFFSSxXQUFBO0NDakJYO0FEaENEO0VBc0RZLG1CQUFBO0VBQ0EsK0JBQUE7RUFDQSxtQkFBQTtDQ25CWDtBRHNCTztFQUVJLFNBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7Q0NyQlg7QURnQk87RUFTUSxPQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0NDdEJmO0FEMEJPO0VBRUksVUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtDQ3pCWDtBRG9CTztFQVNRLFFBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7Q0MxQmY7QURnQ0c7RUFJUSxhQUFBO0VBQ0EsU0FBQTtDQ2pDWDtBRDRCRztFQVVRLFlBQUE7RUFDQSxVQUFBO0NDbkNYIiwiZmlsZSI6InNjcm9sbGVydC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2Nyb2xsZXJ0XG57XG4gICAgQG9mZnNldDogOHB4O1xuICAgIEBzaXplOiAxMnB4O1xuICAgIEBtaW4tdHJhY2stc2l6ZTogNSU7XG4gICAgQHh5LWludGVyc2VjdGlvbi1vZmZzZXQ6IEBvZmZzZXQgKyAyMHB4O1xuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICA+IC5zY3JvbGxlcnQtY29udGVudFxuICAgIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuXG4gICAgICAgICY6Zm9jdXNcbiAgICAgICAge1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyXG4gICAgICAgIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmhvdmVyID4gLnNjcm9sbGVydC1zY3JvbGxiYXJcbiAgICB7XG4gICAgICAgIG9wYWNpdHk6IC41O1xuICAgIH1cblxuICAgID4gLnNjcm9sbGVydC1zY3JvbGxiYXJcbiAgICB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC4xKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogQHNpemUvMjtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDUwMG1zO1xuICAgICAgICBvcGFjaXR5OiAuMDtcblxuICAgICAgICAmOmhvdmVyXG4gICAgICAgIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cblxuICAgICAgICA+IC5zY3JvbGxlcnQtdHJhY2tcbiAgICAgICAge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNCk7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiBAc2l6ZS8yO1xuICAgICAgICB9XG5cbiAgICAgICAgJi15XG4gICAgICAgIHtcbiAgICAgICAgICAgIHRvcDogQG9mZnNldDtcbiAgICAgICAgICAgIGJvdHRvbTogQG9mZnNldDtcbiAgICAgICAgICAgIHJpZ2h0OiBAb2Zmc2V0O1xuICAgICAgICAgICAgd2lkdGg6IEBzaXplO1xuXG4gICAgICAgICAgICA+IC5zY3JvbGxlcnQtdHJhY2tcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IEBtaW4tdHJhY2stc2l6ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYteFxuICAgICAgICB7XG4gICAgICAgICAgICBsZWZ0OiBAb2Zmc2V0O1xuICAgICAgICAgICAgcmlnaHQ6IEBvZmZzZXQ7XG4gICAgICAgICAgICBib3R0b206IEBvZmZzZXQ7XG4gICAgICAgICAgICBoZWlnaHQ6IEBzaXplO1xuXG4gICAgICAgICAgICA+IC5zY3JvbGxlcnQtdHJhY2tcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IEBtaW4tdHJhY2stc2l6ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vQm90aCBzY3JvbGxiYXJzIGFyZSBhdmFpbGFibGVcbiAgICAmLnNjcm9sbGVydC1heGlzLXguc2Nyb2xsZXJ0LWF4aXMteVxuICAgIHtcbiAgICAgICAgPiAuc2Nyb2xsZXJ0LXNjcm9sbGJhci15XG4gICAgICAgIHtcbiAgICAgICAgICAgIGJvdHRvbTogQHh5LWludGVyc2VjdGlvbi1vZmZzZXQ7XG4gICAgICAgICAgICB0b3A6IEBvZmZzZXQ7XG4gICAgICAgIH1cblxuICAgICAgICA+IC5zY3JvbGxlcnQtc2Nyb2xsYmFyLXhcbiAgICAgICAge1xuICAgICAgICAgICAgcmlnaHQ6IEB4eS1pbnRlcnNlY3Rpb24tb2Zmc2V0O1xuICAgICAgICAgICAgbGVmdDogQG9mZnNldDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuIiwiLnNjcm9sbGVydCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5zY3JvbGxlcnQgPiAuc2Nyb2xsZXJ0LWNvbnRlbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG4uc2Nyb2xsZXJ0ID4gLnNjcm9sbGVydC1jb250ZW50OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5zY3JvbGxlcnQgPiAuc2Nyb2xsZXJ0LWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5zY3JvbGxlcnQ6aG92ZXIgPiAuc2Nyb2xsZXJ0LXNjcm9sbGJhciB7XG4gIG9wYWNpdHk6IC41O1xufVxuLnNjcm9sbGVydCA+IC5zY3JvbGxlcnQtc2Nyb2xsYmFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA1MDBtcztcbiAgb3BhY2l0eTogLjA7XG59XG4uc2Nyb2xsZXJ0ID4gLnNjcm9sbGVydC1zY3JvbGxiYXI6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLnNjcm9sbGVydCA+IC5zY3JvbGxlcnQtc2Nyb2xsYmFyID4gLnNjcm9sbGVydC10cmFjayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG59XG4uc2Nyb2xsZXJ0ID4gLnNjcm9sbGVydC1zY3JvbGxiYXIteSB7XG4gIHRvcDogOHB4O1xuICBib3R0b206IDhweDtcbiAgcmlnaHQ6IDhweDtcbiAgd2lkdGg6IDEycHg7XG59XG4uc2Nyb2xsZXJ0ID4gLnNjcm9sbGVydC1zY3JvbGxiYXIteSA+IC5zY3JvbGxlcnQtdHJhY2sge1xuICB0b3A6IDA7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDUlO1xufVxuLnNjcm9sbGVydCA+IC5zY3JvbGxlcnQtc2Nyb2xsYmFyLXgge1xuICBsZWZ0OiA4cHg7XG4gIHJpZ2h0OiA4cHg7XG4gIGJvdHRvbTogOHB4O1xuICBoZWlnaHQ6IDEycHg7XG59XG4uc2Nyb2xsZXJ0ID4gLnNjcm9sbGVydC1zY3JvbGxiYXIteCA+IC5zY3JvbGxlcnQtdHJhY2sge1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDUlO1xufVxuLnNjcm9sbGVydC5zY3JvbGxlcnQtYXhpcy14LnNjcm9sbGVydC1heGlzLXkgPiAuc2Nyb2xsZXJ0LXNjcm9sbGJhci15IHtcbiAgYm90dG9tOiAyOHB4O1xuICB0b3A6IDhweDtcbn1cbi5zY3JvbGxlcnQuc2Nyb2xsZXJ0LWF4aXMteC5zY3JvbGxlcnQtYXhpcy15ID4gLnNjcm9sbGVydC1zY3JvbGxiYXIteCB7XG4gIHJpZ2h0OiAyOHB4O1xuICBsZWZ0OiA4cHg7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
